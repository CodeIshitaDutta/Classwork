# creating the sample value and total
sample <- c(samples1[i,1:2], samples2[j,1:2])
sval1 = samples1[i,1] + samples1[i,2] + samples2[j,1] + samples2[j,2]
sval = (sval1/nt) * Nt
samplest <- rbind(samplest, sample)
#checking if the total already exists, add 1 if it does, create new ti if not
if (sval %in% sumvalt){
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
sumvalt
sum_countt
stotal = sum(sum_countt)
stotal
probst = sum_countt/stotal
data.frame(sumvalt, sum_countt, probst)
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
nt <- 4
Nt <- 8
for(i in c(1:length(samples1[,1]))){
for(j in c(1:length(samples2[,1]))){
# creating the sample value and total
sample <- c(samples1[i,1:2], samples2[j,1:2])
sval1 = samples1[i,1] + samples1[i,2] + samples2[j,1] + samples2[j,2]
sval = (sval1/nt) * Nt
samplest <- rbind(samplest, sample)
#checking if the total already exists, add 1 if it does, create new ti if not
if (sval %in% sumvalt){
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
samplest
stotal = sum(sum_countt)
probst = sum_countt/stotal
data.frame(sumvalt, sum_countt, probst)
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
nt <- 4
Nt <- 8
for(i in c(1:length(samples1[,1]))){
for(j in c(1:length(samples2[,1]))){
# creating the sample value and total
sample <- c(samples1[i,1:2], samples2[j,1:2])
sval1 = samples1[i,1] + samples1[i,2] + samples2[j,1] + samples2[j,2]
sval = (sval1/nt) * Nt
samplest <- rbind(samplest, sample)
#checking if the total already exists, add 1 if it does, create new ti if not
if (sval %in% sumvalt){
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
samplest.unique()
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
nt <- 4
Nt <- 8
for(i in c(1:length(samples1[,1]))){
for(j in c(1:length(samples2[,1]))){
# creating the sample value and total
sample <- c(samples1[i,1:2], samples2[j,1:2])
sval1 = samples1[i,1] + samples1[i,2] + samples2[j,1] + samples2[j,2]
sval = (sval1/nt) * Nt
samplest <- rbind(samplest, sample)
#checking if the total already exists, add 1 if it does, create new ti if not
if (sval %in% sumvalt){
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
unique(samplest)
stotal = sum(sum_countt)
probst = sum_countt/stotal
data.frame(sumvalt, sum_countt, probst)
# Stratum 1
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
pop1 = c(1, 2, 4, 8)
samples1 <- c()
sum_count1 <- NULL
sumval1 <- NULL
n1 <- 2
N1 <- 4
for(i in c(1:4)) {
for (j in c(1:4)) {
if(i == j) {
next
}
sample <- c( pop1[i], pop1[j])
samples1 <- rbind(samples1, sample)
samplest <- rbind(samplest, sample)
sval1 = pop1[i] + pop1[j]
sval = (sval1*n2)/N2
if (sval %in% sumval1){
index = match(sval, sumval1)
sum_count1[index] = sum_count1[index] + 1
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumval1 = c(sumval1, sval)
sum_count1 = c(sum_count1, 1)
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
unique(samples1)
# Stratum 2
pop2 = c(4, 7, 7, 7)
samples2 <- c()
sum_count2 <- NULL
sumval2 <- NULL
n2 <- 2
N2 <- 4
for(i in c(1:4)) {
for (j in c(1:4)) {
if(i == j) {
next
}
sample <- c(pop2[i], pop2[j])
samples2 <- rbind(samples2, sample)
samplest <- rbind(samplest, sample)
sval1 = pop2[i] + pop2[j]
sval = (sval1*n2)/N2
if (sval %in% sumval2){
index = match(sval, sumval2)
sum_count2[index] = sum_count2[index] + 1
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumval2 = c(sumval2, sval)
sum_count2 = c(sum_count2, 1)
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
unique(samples2)
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
nt <- 4
Nt <- 8
for(i in c(1:length(samples1[,1]))){
for(j in c(1:length(samples2[,1]))){
# creating the sample value and total
sample <- c(samples1[i,1:2], samples2[j,1:2])
sval1 = samples1[i,1] + samples1[i,2] + samples2[j,1] + samples2[j,2]
sval = (sval1/nt) * Nt
samplest <- rbind(samplest, sample)
#checking if the total already exists, add 1 if it does, create new ti if not
if (sval %in% sumvalt){
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
unique(samplest)
stotal = sum(sum_countt)
probst = sum_countt/stotal
data.frame(sumvalt, sum_countt, probst)
meanval = (1/sum(sum_countt)) * sum(sumvalt * probst)
meanval
meanval = sum(sumvalt * probst)
meanval
meanval = sum((sumvalt * probst) * (length(samples1[,1]) / length(samplest[,1])))
meanval
varval = (1/sum(sum_countt)) * 1
meanval = sum(sumvalt * probst)
meanval
varval = (1/sum(sum_countt)) *
meanval = sum(sumvalt * probst)
meanval
varval = (1/sum(sum_countt)) * 1
meanval = sum(sumvalt * probst)
meanval
varval = (1/(sum(sum_countt) - 1)) * sum((sumvalt - meanval) ^ 2)
varval
# Stratum 1
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
pop1 = c(1, 2, 4, 8)
samples1 <- c()
sum_count1 <- NULL
sumval1 <- NULL
n1 <- 2
N1 <- 4
for(i in c(1:4)) {
for (j in c(1:4)) {
if(i == j) {
next
}
sample <- c( pop1[i], pop1[j])
samples1 <- rbind(samples1, sample)
samplest <- rbind(samplest, sample)
sval1 = pop1[i] + pop1[j]
sval = (sval1*n1)/N1
if (sval %in% sumval1){
index = match(sval, sumval1)
sum_count1[index] = sum_count1[index] + 1
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumval1 = c(sumval1, sval)
sum_count1 = c(sum_count1, 1)
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
samples1
15000 + 5000
100 / 20000
0.005 * 5000
0.005 * 15000
p1 = 0.1
p2 = 0.03
n1.n = 0.4
n2.n = 1 - n1.n
S21 = n1.n * p1 * (1 - p1)
S22 = n2.n * p2 * (1 - p2)
nh1 = (n1.n * (sqrt(S21))) * 2000
n1h
p1 = 0.1
p2 = 0.03
n1.n = 0.4
n2.n = 1 - n1.n
S21 = n1.n * p1 * (1 - p1)
S22 = n2.n * p2 * (1 - p2)
nh1 = (n1.n * (sqrt(S21))) * 2000
nh1
p1 = 0.1
p2 = 0.03
n1.n = 0.4
n2.n = 1 - n1.n
S21 = n1.n * p1 * (1 - p1)
S22 = n2.n * p2 * (1 - p2)
nh1 = (n1.n * (sqrt(S21))) * 2000
nh2 = (n2.n * (sqrt(S22))) * 2000
nh1
nh2
student = c(1,2,3,4,5,6)
score = c(66,59,70,83,82,71)
dat_p2 = data.frame(student, score)
dat_p2
N = 6
summary(dat_p2)$score$mean
student = c(1,2,3,4,5,6)
score = c(66,59,70,83,82,71)
dat_p2 = data.frame(student, score)
dat_p2
N = 6
summary(dat_p2)
n <- length(dat_p2$score)
var.dat_p2 = var(dat_p2$score) * (n-1)/n
var.dat_p2
student = c(1,2,3,4,5,6)
score = c(66,59,70,83,82,71)
dat_p2 = data.frame(student, score)
dat_p2
N = 6
summary(dat_p2)
n <- length(dat_p2$score)
var.dat_p2 = var(dat_p2$score) * (n-1)/n
mean(dat_p2)
var.dat_p2
student = c(1,2,3,4,5,6)
score = c(66,59,70,83,82,71)
dat_p2 = data.frame(student, score)
dat_p2
N = 6
summary(dat_p2)
n <- length(dat_p2$score)
var.dat_p2 = var(dat_p2$score) * (n-1)/n
mean(dat_p2$score)
var.dat_p2
samples <- c()
n <- 4
N <- 6
for (i in 1:6){
for (j in 1:6){
for (k in 1:6){
for (l in 1:6){
sample <- c( score[i], score[j],score[k],score[l])
samples <- rbind(samples, sample)
}
}
}
}
samples <- data.frame(samples)
num_rows = nrow(srs(dat_p2$score, n))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(combinat)
library(gtools)
library(survey)
# Stratum 1
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
pop1 = c(1, 2, 4, 8)
samples1 <- c()
sum_count1 <- NULL
sumval1 <- NULL
n1 <- 2
N1 <- 4
for(i in c(1:4)) {
for (j in c(1:4)) {
if(i == j) {
next
}
sample <- c( pop1[i], pop1[j])
samples1 <- rbind(samples1, sample)
samplest <- rbind(samplest, sample)
sval1 = pop1[i] + pop1[j]
sval = (sval1*n1)/N1
if (sval %in% sumval1){
index = match(sval, sumval1)
sum_count1[index] = sum_count1[index] + 1
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumval1 = c(sumval1, sval)
sum_count1 = c(sum_count1, 1)
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
samples1
# Stratum 2
pop2 = c(4, 7, 7, 7)
samples2 <- c()
sum_count2 <- NULL
sumval2 <- NULL
n2 <- 2
N2 <- 4
for(i in c(1:4)) {
for (j in c(1:4)) {
if(i == j) {
next
}
sample <- c(pop2[i], pop2[j])
samples2 <- rbind(samples2, sample)
samplest <- rbind(samplest, sample)
sval1 = pop2[i] + pop2[j]
sval = (sval1*n2)/N2
if (sval %in% sumval2){
index = match(sval, sumval2)
sum_count2[index] = sum_count2[index] + 1
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumval2 = c(sumval2, sval)
sum_count2 = c(sum_count2, 1)
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
samples2
samplest <- c()
sum_countt <- NULL
sumvalt <- NULL
nt <- 4
Nt <- 8
for(i in c(1:length(samples1[,1]))){
for(j in c(1:length(samples2[,1]))){
# creating the sample value and total
sample <- c(samples1[i,1:2], samples2[j,1:2])
sval1 = samples1[i,1] + samples1[i,2] + samples2[j,1] + samples2[j,2]
sval = (sval1/nt) * Nt
samplest <- rbind(samplest, sample)
#checking if the total already exists, add 1 if it does, create new ti if not
if (sval %in% sumvalt){
index = match(sval, sumvalt)
sum_countt[index] = sum_countt[index] + 1
}
else {
sumvalt = c(sumvalt, sval)
sum_countt = c(sum_countt, 1)
}
}
}
#posting only the unique samples for ease of reading tbh. Total possible samples = 144.
unique(samplest)
stotal = sum(sum_countt)
probst = sum_countt/stotal
data.frame(sumvalt, sum_countt, probst)
meanval = sum(sumvalt * probst)
meanval
varval = (1/(sum(sum_countt) - 1)) * sum((sumvalt - meanval) ^ 2)
varval
student = c(1,2,3,4,5,6)
score = c(66,59,70,83,82,71)
dat_p2 = data.frame(student, score)
dat_p2
N = 6
summary(dat_p2)
n <- length(dat_p2$score)
var.dat_p2 = var(dat_p2$score) * (n-1)/n
mean(dat_p2$score)
var.dat_p2
samples <- c()
n <- 4
N <- 6
for (i in 1:6){
for (j in 1:6){
for (k in 1:6){
for (l in 1:6){
sample <- c( score[i], score[j],score[k],score[l])
samples <- rbind(samples, sample)
}
}
}
}
samples <- data.frame(samples)
num_rows = nrow(srs(dat_p2$score, n))
samples <- c()
n <- 4
N <- 6
for (i in 1:6){
for (j in 1:6){
for (k in 1:6){
for (l in 1:6){
sample <- c( score[i], score[j],score[k],score[l])
samples <- rbind(samples, sample)
}
}
}
}
samples <- data.frame(samples)
#num_rows = nrow(srs(dat_p2$score, n))
srs_dat = srs(dat_p2$score, n)
H <- 2            #number of strata
N_h <- c(3,3)   #strata sizes
N <- sum(N_h)     #overall population size
n_h <- c(2,2)   #sample size in each strata
n <- sum(n_h)     #overall sample size
#number of stratified sampling
dim(combn(3,2))[2]*dim(combn(3,2))[2]
student <- c(1,2,3,4,5,6)
score <- c(66,59,70,83,82,71)
data <- data.frame(student, score)
stratum_1 <- t(combn(c(1,2,3),2))
stratum_2 <- t(combn(c(4,5,6),2))
srs <- data.frame()
for (i in 1:3){
for (j in 1:3){
temp <- c(stratum_1[i,],stratum_2[j,])
srs <- rbind(srs,temp)
}
}
srs_y <- data.frame()
for (i in 1:nrow(srs)) {
a <- c()
for (j in srs[i,]) {
a <- append(a, data[data['student']==j][2])
}
srs_y<- rbind(srs_y, a)
}
srs_final <- cbind(srs,srs_y)
srs_final
y_strmean <- rowMeans(srs_final[,5:8])
srs1_mean <- mean(score[1:3])
S1 <- sum((score[1:3] - srs1_mean)^2) / 2
S1
srs2_mean <- mean(score[4:6])
S2 <- sum((score[4:6] - srs2_mean)^2) / 2
S2
var_y <- ((1-(2/3)) * (3/6)^2 * S1/2) + ((1-(2/3)) * (3/6)^2 * S2/2)
var_y
knitr::include_graphics('part4a.jpg')
knitr::include_graphics('part4a.jpeg')
knitr::include_graphics('part4.jpeg')
