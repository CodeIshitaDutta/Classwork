n.NL.baseball
sample_numbers.AL.baseball = sample.int(N.AL.baseball, n.AL.baseball)
sample.AL.baseball = baseball_AL[sample_numbers.AL.baseball, ]
sample_numbers.NL.baseball = sample.int(N.NL.baseball, n.NL.baseball)
sample.NL.baseball = baseball_NL[sample_numbers.NL.baseball, ]
sample.AL.baseball
sample.NL.baseball
baseball = read.csv('baseball.csv')
baseball_AL = baseball[baseball$leagueid == 'AL',]
baseball_NL = baseball[baseball$leagueid == 'NL',]
N.baseball = length(baseball$team)
N.AL.baseball= length(baseball_AL$team)
N.NL.baseball = length(baseball_NL$team)
n.baseball = 200
n.AL.baseball = round((N.AL.baseball/N.baseball) * n.baseball)
n.NL.baseball = round((N.NL.baseball/N.baseball) * n.baseball)
n.baseball
n.AL.baseball
n.NL.baseball
sample_numbers.AL.baseball = sample.int(N.AL.baseball, n.AL.baseball)
sample.AL.baseball = baseball_AL[sample_numbers.AL.baseball, ]
sample_numbers.NL.baseball = sample.int(N.NL.baseball, n.NL.baseball)
sample.NL.baseball = baseball_NL[sample_numbers.NL.baseball, ]
sample.AL.baseball
sample.NL.baseball
sample.baseball = rbind(sample.AL.baseball,sample.NL.baseball)
sample.baseball
sample.AL.baseball$logsalary = log(sample.AL.baseball$salary)
sample.NL.baseball$logsalary = log(sample.NL.baseball$salary)
log_sal_bar_s.AL.baseball = (sum(sample.AL.baseball$logsalary)) / (n.AL.baseball)
log_sal_bar_s.NL.baseball = (sum(sample.NL.baseball$logsalary)) / (n.NL.baseball)
log_sal_bar_s.NL.baseball
log_sal_bar_s.AL.baseball
sample.AL.baseball$logsalary = log(sample.AL.baseball$salary)
sample.NL.baseball$logsalary = log(sample.NL.baseball$salary)
log_sal_bar_s.AL.baseball = (sum(sample.AL.baseball$logsalary)) / (n.AL.baseball)
log_sal_bar_s.NL.baseball = (sum(sample.NL.baseball$logsalary)) / (n.NL.baseball)
log_sal_bar_s.AL.baseball
log_sal_bar_s.NL.baseball
sample.AL.baseball$logsalary = log(sample.AL.baseball$salary)
sample.NL.baseball$logsalary = log(sample.NL.baseball$salary)
log_sal_bar_s.AL.baseball = (sum(sample.AL.baseball$logsalary)) / (n.AL.baseball)
log_sal_bar_s.NL.baseball = (sum(sample.NL.baseball$logsalary)) / (n.NL.baseball)
log_sal_bar_s.AL.baseball
log_sal_bar_s.NL.baseball
ssq_log_sal_bar_s.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$logsalary - log_sal_bar_s.AL.baseball)^2))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
ssq_log_sal_bar_s.AL.baseball
ssq_log_sal_bar_s.NL.baseball
se_log_sal_bar_s.AL.baseball = sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_log_sal_bar_s.AL.baseball/n.AL.baseball))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
se_log_sal_bar_s.AL.baseball
se_log_sal_bar_s.AL.baseball
sample.AL.baseball$logsalary = log(sample.AL.baseball$salary)
sample.NL.baseball$logsalary = log(sample.NL.baseball$salary)
log_sal_bar_s.AL.baseball = (sum(sample.AL.baseball$logsalary)) / (n.AL.baseball)
log_sal_bar_s.NL.baseball = (sum(sample.NL.baseball$logsalary)) / (n.NL.baseball)
log_sal_bar_s.AL.baseball
log_sal_bar_s.NL.baseball
ssq_log_sal_bar_s.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$logsalary - log_sal_bar_s.AL.baseball)^2))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
ssq_log_sal_bar_s.AL.baseball
ssq_log_sal_bar_s.NL.baseball
se_log_sal_bar_s.AL.baseball = sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_log_sal_bar_s.AL.baseball/n.AL.baseball))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
se_log_sal_bar_s.AL.baseball
se_log_sal_bar_s.AL.baseball
high.AL.baseball = log_sal_bar_s.AL.baseball + (z * se_log_sal_bar_s.AL.baseball)
# All libraries are present here:
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(combinat)
library(gtools)
library(survey)
library("MASS")
library(ggplot2)
# Chose to reinvent the wheel with all the formulas to make sure the values are the correct ones...
set.seed(123)
# Read the csv file first
anthrop = read.csv('anthrop.csv')
# Sample of 200 criminals, storing the sample
sample_numbers.anthrop = sample.int(length(anthrop$finger), 200)
sample.anthrop = anthrop[sample_numbers.anthrop, ]
# Setting variables based on given:
N.anthrop = 3000
n.anthrop = 200
# Average height
y_bar_s.anthrop = sum(sample.anthrop$height) / (n.anthrop - 1)
# Standard error for average height
s_sq_y_s.anthrop = sum((sample.anthrop$height - y_bar_s.anthrop)^2)
se_y_bar_s.anthrop = sqrt((1 - (n.anthrop/N.anthrop))*((s_sq_y_s.anthrop)/(n.anthrop)))
# Confidence interval
z = qnorm(0.95) # Both N and n are large enough for a z interval, so using z interval
low.anthrop = y_bar_s.anthrop - (se_y_bar_s.anthrop * z)
high.anthrop = y_bar_s.anthrop + (se_y_bar_s.anthrop * z)
y_bar_s.anthrop
se_y_bar_s.anthrop
c(low.anthrop, high.anthrop)
# Error value
e = 2
# N0
n.naught.anthrop = ((z^2)*(s_sq_y_s.anthrop))/(e^2)
# Without pilot sample
(n.naught.anthrop)/(1 + (n.naught.anthrop / N.anthrop))
# With pilot sample
(n.naught.anthrop)/(1 + (n.naught.anthrop /( N.anthrop - n.anthrop)))
mean.anthrop.finger = sum(anthrop$finger)/N.anthrop
var.anthrop.height = (sum((anthrop$finger - mean.anthrop.finger)^2))/ (N.anthrop - 1)
x_bar_s.anthrop = sum(sample.anthrop$finger)/n.anthrop
s_sq_x_s.anthrop = sum((sample.anthrop$finger - x_bar_s.anthrop)^2)
B_hat.anthrop = y_bar_s.anthrop / x_bar_s.anthrop
B_hat.anthrop
y_bar_rat.anthrop = B_hat.anthrop * mean.anthrop.finger
y_bar_rat.anthrop
e_rat.anthrop = sample.anthrop$height - (B_hat.anthrop * sample.anthrop$finger)
s_sq_e_rat.anthrop = (1 / (n.anthrop - 1)) * (sum(e_rat.anthrop ^ 2))
var_y_bar_rat.anthrop = (1 - (n.anthrop/N.anthrop)) * ((mean.anthrop.finger/x_bar_s.anthrop)^2) * (s_sq_e_rat.anthrop / n.anthrop)
(sqrt(var_y_bar_rat.anthrop))
var_y_bar_rat.anthrop
low_rat.anthrop = y_bar_rat.anthrop - ((sqrt(var_y_bar_rat.anthrop)) * z)
high_rat.anthrop = y_bar_rat.anthrop + ((sqrt(var_y_bar_rat.anthrop)) * z)
c(low_rat.anthrop, high_rat.anthrop)
# N0
n.naught.anthrop = ((z^2)*(var_y_bar_rat.anthrop))/(e^2)
# Without pilot sample
(n.naught.anthrop)/(1 + (n.naught.anthrop / N.anthrop))
# With pilot sample
(n.naught.anthrop)/(1 + (n.naught.anthrop /( N.anthrop - n.anthrop)))
r = cor(sample.anthrop$height, sample.anthrop$finger)
b_hat_1_reg.anthrop = (r * (sqrt(s_sq_x_s.anthrop))) / ((sqrt(s_sq_y_s.anthrop)))
b_hat_1_reg.anthrop
b_hat_0_reg.anthrop = y_bar_s.anthrop - (b_hat_1_reg.anthrop * x_bar_s.anthrop)
y_bar_reg.anthrop = b_hat_0_reg.anthrop + (b_hat_1_reg.anthrop * mean.anthrop.finger)
y_bar_reg.anthrop
e_reg.anthrop = sample.anthrop$height - (b_hat_0_reg.anthrop + (b_hat_1_reg.anthrop * sample.anthrop$finger))
s_e_sq_reg.anthrop = (1 / (n.anthrop - 1)) * (sum((e_reg.anthrop)^2))
s_e_sq_reg.anthrop
se_y_bar_reg.anthrop = sqrt((1 - (n.anthrop/N.anthrop)) * (s_e_sq_reg.anthrop / n.anthrop))
se_y_bar_reg.anthrop
low_reg.anthrop = y_bar_reg.anthrop - ((se_y_bar_reg.anthrop) * z)
high_reg.anthrop = y_bar_reg.anthrop + ((se_y_bar_reg.anthrop) * z)
c(low_reg.anthrop, high_reg.anthrop)
baseball = read.csv('baseball.csv')
baseball_AL = baseball[baseball$leagueid == 'AL',]
baseball_NL = baseball[baseball$leagueid == 'NL',]
N.baseball = length(baseball$team)
N.AL.baseball= length(baseball_AL$team)
N.NL.baseball = length(baseball_NL$team)
n.baseball = 200
n.AL.baseball = round((N.AL.baseball/N.baseball) * n.baseball)
n.NL.baseball = round((N.NL.baseball/N.baseball) * n.baseball)
sample_numbers.AL.baseball = sample.int(N.AL.baseball, n.AL.baseball)
sample_numbers.NL.baseball = sample.int(N.NL.baseball, n.NL.baseball)
sample.AL.baseball = baseball_AL[sample_numbers.AL.baseball, ]
sample.NL.baseball = baseball_NL[sample_numbers.NL.baseball, ]
sample.baseball = rbind(sample.AL.baseball,sample.NL.baseball)
sample.AL.baseball$logsalary = log(sample.AL.baseball$salary)
sample.NL.baseball$logsalary = log(sample.NL.baseball$salary)
log_sal_bar_s.AL.baseball = (sum(sample.AL.baseball$logsalary)) / (n.AL.baseball)
log_sal_bar_s.NL.baseball = (sum(sample.NL.baseball$logsalary)) / (n.NL.baseball)
log_sal_bar_s.AL.baseball
log_sal_bar_s.NL.baseball
ssq_log_sal_bar_s.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$logsalary - log_sal_bar_s.AL.baseball)^2))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
ssq_log_sal_bar_s.AL.baseball
ssq_log_sal_bar_s.NL.baseball
se_log_sal_bar_s.AL.baseball = sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_log_sal_bar_s.AL.baseball/n.AL.baseball))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
se_log_sal_bar_s.AL.baseball
se_log_sal_bar_s.AL.baseball
high.AL.baseball = log_sal_bar_s.AL.baseball + (z * se_log_sal_bar_s.AL.baseball)
low.AL.baseball = log_sal_bar_s.AL.baseball - (z * se_log_sal_bar_s.AL.baseball)
high.NL.baseball = log_sal_bar_s.NL.baseball + (z * se_log_sal_bar_s.NL.baseball)
sample.AL.baseball$logsalary = log(sample.AL.baseball$salary)
sample.NL.baseball$logsalary = log(sample.NL.baseball$salary)
log_sal_bar_s.AL.baseball = (sum(sample.AL.baseball$logsalary)) / (n.AL.baseball)
log_sal_bar_s.NL.baseball = (sum(sample.NL.baseball$logsalary)) / (n.NL.baseball)
log_sal_bar_s.AL.baseball
log_sal_bar_s.NL.baseball
ssq_log_sal_bar_s.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$logsalary - log_sal_bar_s.AL.baseball)^2))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
ssq_log_sal_bar_s.AL.baseball
ssq_log_sal_bar_s.NL.baseball
se_log_sal_bar_s.AL.baseball = sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_log_sal_bar_s.AL.baseball/n.AL.baseball))
se_log_sal_bar_s.NL.baseball = sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_log_sal_bar_s.NL.baseball/n.NL.baseball))
se_log_sal_bar_s.AL.baseball
se_log_sal_bar_s.NL.baseball
high.AL.baseball = log_sal_bar_s.AL.baseball + (z * se_log_sal_bar_s.AL.baseball)
low.AL.baseball = log_sal_bar_s.AL.baseball - (z * se_log_sal_bar_s.AL.baseball)
high.NL.baseball = log_sal_bar_s.NL.baseball + (z * se_log_sal_bar_s.NL.baseball)
low.NL.baseball = log_sal_bar_s.NL.baseball - (z * se_log_sal_bar_s.NL.baseball)
c(low.AL.baseball,high.AL.baseball)
c(low.NL.baseball,high.NL.baseball)
sample.AL.baseball$logsalary = log(sample.AL.baseball$salary)
sample.NL.baseball$logsalary = log(sample.NL.baseball$salary)
log_sal_bar_s.AL.baseball = (sum(sample.AL.baseball$logsalary)) / (n.AL.baseball)
log_sal_bar_s.NL.baseball = (sum(sample.NL.baseball$logsalary)) / (n.NL.baseball)
log_sal_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (log_sal_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (log_sal_bar_s.NL.baseball))
log_sal_bar_s.AL.baseball
log_sal_bar_s.NL.baseball
log_sal_bar_s.sample.baseball
ssq_log_sal_bar_s.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$logsalary - log_sal_bar_s.AL.baseball)^2))
ssq_log_sal_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$logsalary - log_sal_bar_s.NL.baseball)^2))
ssq_log_sal_bar_s.AL.baseball
ssq_log_sal_bar_s.NL.baseball
se_log_sal_bar_s.AL.baseball = sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_log_sal_bar_s.AL.baseball/n.AL.baseball))
se_log_sal_bar_s.NL.baseball = sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_log_sal_bar_s.NL.baseball/n.NL.baseball))
var_log_sal_bar_s.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_log_sal_bar_s.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_log_sal_bar_s.NL.baseball/n.NL.baseball))
se_log_sal_bar_s.AL.baseball
se_log_sal_bar_s.NL.baseball
sqrt(var_log_sal_bar_s.sample.baseball)
high.AL.baseball = log_sal_bar_s.AL.baseball + (z * se_log_sal_bar_s.AL.baseball)
low.AL.baseball = log_sal_bar_s.AL.baseball - (z * se_log_sal_bar_s.AL.baseball)
high.NL.baseball = log_sal_bar_s.NL.baseball + (z * se_log_sal_bar_s.NL.baseball)
low.NL.baseball = log_sal_bar_s.NL.baseball - (z * se_log_sal_bar_s.NL.baseball)
high.sample.baseball = log_sal_bar_s.sample.baseball + (z * sqrt(var_log_sal_bar_s.sample.baseball))
low.sample.baseball = log_sal_bar_s.sample.baseball - (z * sqrt(var_log_sal_bar_s.sample.baseball))
c(low.AL.baseball,high.AL.baseball)
c(low.NL.baseball,high.NL.baseball)
c(low.sample.baseball,high.sample.baseball)
baseball = read.csv('baseball.csv')
baseball_AL = baseball[baseball$leagueid == 'AL',]
baseball_NL = baseball[baseball$leagueid == 'NL',]
baseball
N.baseball = length(baseball$team)
N.AL.baseball= length(baseball_AL$team)
N.NL.baseball = length(baseball_NL$team)
n.baseball = 200
n.AL.baseball = round((N.AL.baseball/N.baseball) * n.baseball)
n.NL.baseball = round((N.NL.baseball/N.baseball) * n.baseball)
sample_numbers.AL.baseball = sample.int(N.AL.baseball, n.AL.baseball)
sample_numbers.NL.baseball = sample.int(N.NL.baseball, n.NL.baseball)
sample.AL.baseball = baseball_AL[sample_numbers.AL.baseball, ]
sample.NL.baseball = baseball_NL[sample_numbers.NL.baseball, ]
sample.baseball = rbind(sample.AL.baseball,sample.NL.baseball)
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_bar_s.AL.baseball
games_bar_s.NL.baseball
games_bar_s.sample.baseball
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_bar_s.AL.baseball
games_bar_s.NL.baseball
games_bar_s.sample.baseball
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = (N.AL.baseball * games_bar_s.AL.baseball) + (N.NL.baseball * games_bar_s.NL.baseball)
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_bar_s.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_s.AL.baseball)^2))
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_bar_s.AL.baseball
games_bar_s.NL.baseball
games_bar_s.sample.baseball
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = (N.AL.baseball * games_bar_s.AL.baseball) + (N.NL.baseball * games_bar_s.NL.baseball)
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_bar_s.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_bar_s.AL.baseball)^2))
ssq_games_bar_s.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_bar_s.NL.baseball)^2))
ssq_games_bar_s.AL.baseball
ssq_games_bar_s.NL.baseball
se_games_bar_s.AL.baseball = sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_bar_s.AL.baseball/n.AL.baseball))
se_games_bar_s.NL.baseball = sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_bar_s.NL.baseball/n.NL.baseball))
var_games_bar_s.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_bar_s.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_bar_s.NL.baseball/n.NL.baseball))
se_games_bar_s.AL.baseball
se_games_bar_s.NL.baseball
sqrt(var_games_bar_s.sample.baseball)
high.games.AL.baseball = games_bar_bar_s.AL.baseball + (z * N.AL.baseball * se_games_bar_bar_s.AL.baseball)
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_bar_s.AL.baseball
games_bar_s.NL.baseball
games_bar_s.sample.baseball
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = (N.AL.baseball * games_bar_s.AL.baseball) + (N.NL.baseball * games_bar_s.NL.baseball)
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_t.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_t.AL.baseball)^2))
ssq_games_t.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_t.NL.baseball)^2))
ssq_games_t.AL.baseball
ssq_games_t.NL.baseball
se_games_t.AL.baseball = sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball))
se_games_t.NL.baseball = sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * N.AL.baseball * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * N.AL.baseball * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * N.NL.baseball * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * N.NL.baseball * se_games_t.NL.baseball)
high.games.sample.baseball = N.baseball * (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = N.baseball * (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = games_t.AL.baseball + games_t.NL.baseball
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_t.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_t.AL.baseball)^2))
ssq_games_t.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_t.NL.baseball)^2))
ssq_games_t.AL.baseball
ssq_games_t.NL.baseball
se_games_t.AL.baseball = N.AL.baseball * (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = N.NL.baseball * (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * N.AL.baseball * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * N.AL.baseball * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * N.NL.baseball * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * N.NL.baseball * se_games_t.NL.baseball)
high.games.sample.baseball = N.baseball * (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = N.baseball * (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = games_t.AL.baseball + games_t.NL.baseball
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_t.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_t.AL.baseball)^2))
ssq_games_t.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_t.NL.baseball)^2))
ssq_games_t.AL.baseball
ssq_games_t.NL.baseball
se_games_t.AL.baseball = N.AL.baseball * (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = N.NL.baseball * (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * N.AL.baseball * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * N.AL.baseball * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * N.NL.baseball * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * N.NL.baseball * se_games_t.NL.baseball)
high.games.sample.baseball = N.baseball * (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = N.baseball * (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
sum(baseball$gplay)
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = games_t.AL.baseball + games_t.NL.baseball
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_t.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_t.AL.baseball)^2))
ssq_games_t.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_t.NL.baseball)^2))
ssq_games_t.AL.baseball
ssq_games_t.NL.baseball
se_games_t.AL.baseball = (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * N.AL.baseball * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * N.AL.baseball * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * N.NL.baseball * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * N.NL.baseball * se_games_t.NL.baseball)
high.games.sample.baseball = N.baseball * (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = N.baseball * (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
sum(baseball$gplay)
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = games_t.AL.baseball + games_t.NL.baseball
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_t.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_t.AL.baseball)^2))
ssq_games_t.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_t.NL.baseball)^2))
ssq_games_t.AL.baseball
ssq_games_t.NL.baseball
se_games_t.AL.baseball = (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * se_games_t.NL.baseball)
high.games.sample.baseball = N.baseball * (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = N.baseball * (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
sum(baseball$gplay)
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = games_t.AL.baseball + games_t.NL.baseball
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_t.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_t.AL.baseball)^2))
ssq_games_t.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_t.NL.baseball)^2))
ssq_games_t.AL.baseball
ssq_games_t.NL.baseball
se_games_t.AL.baseball = (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * se_games_t.NL.baseball)
high.games.sample.baseball = N.baseball * (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = N.baseball * (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
sum(baseball$gplay)
sum(baseball.AL$gplay)
se_games_t.AL.baseball = (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * se_games_t.NL.baseball)
high.games.sample.baseball = N.baseball * (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = N.baseball * (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
sum(baseball$gplay)
sum(baseball_AL$gplay)
sum(baseball_NL$gplay)
se_games_t.AL.baseball = (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * se_games_t.NL.baseball)
high.games.sample.baseball = (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball, sum(baseball_AL$gplay))
c(low.games.NL.baseball,high.games.NL.baseball, sum(baseball_NL$gplay))
c(low.games.sample.baseball,high.games.sample.baseball,sum(baseball$gplay))
games_bar_s.AL.baseball = (sum(sample.AL.baseball$gplay)) / (n.AL.baseball)
games_bar_s.NL.baseball = (sum(sample.NL.baseball$gplay)) / (n.NL.baseball)
games_bar_s.sample.baseball = (((N.AL.baseball)/(N.baseball)) * (games_bar_s.AL.baseball)) + (((N.NL.baseball)/(N.baseball)) * (games_bar_s.NL.baseball))
games_t.AL.baseball = N.AL.baseball * games_bar_s.AL.baseball
games_t.NL.baseball = N.NL.baseball * games_bar_s.NL.baseball
games_t.sample.baseball = games_t.AL.baseball + games_t.NL.baseball
games_t.AL.baseball
games_t.NL.baseball
games_t.sample.baseball
ssq_games_t.AL.baseball =(1/(n.AL.baseball - 1)) * (sum((sample.AL.baseball$gplay - games_t.AL.baseball)^2))
ssq_games_t.NL.baseball =(1/(n.NL.baseball - 1)) * (sum((sample.NL.baseball$gplay - games_t.NL.baseball)^2))
se_games_t.AL.baseball = (sqrt((1 - (n.AL.baseball/N.AL.baseball)) * (ssq_games_t.AL.baseball/n.AL.baseball)))
se_games_t.NL.baseball = (sqrt((1 - (n.NL.baseball/N.NL.baseball)) * (ssq_games_t.NL.baseball/n.NL.baseball)))
var_games_t.sample.baseball = ((1 - (n.AL.baseball/N.AL.baseball)) * ((N.AL.baseball/N.baseball)^2) * (ssq_games_t.AL.baseball/n.AL.baseball)) + ((1 - (n.NL.baseball/N.NL.baseball)) * ((N.NL.baseball/N.baseball)^2) * (ssq_games_t.NL.baseball/n.NL.baseball))
se_games_t.AL.baseball
se_games_t.NL.baseball
sqrt(var_games_t.sample.baseball)
high.games.AL.baseball = games_t.AL.baseball + (z * se_games_t.AL.baseball)
low.games.AL.baseball = games_t.AL.baseball - (z * se_games_t.AL.baseball)
high.games.NL.baseball = games_t.NL.baseball + (z * se_games_t.NL.baseball)
low.games.NL.baseball = games_t.NL.baseball - (z * se_games_t.NL.baseball)
high.games.sample.baseball = (games_t.sample.baseball + (z * sqrt(var_games_t.sample.baseball)))
low.games.sample.baseball = (games_t.sample.baseball - (z * sqrt(var_games_t.sample.baseball)))
c(low.games.AL.baseball,high.games.AL.baseball)
c(low.games.NL.baseball,high.games.NL.baseball)
c(low.games.sample.baseball,high.games.sample.baseball)
