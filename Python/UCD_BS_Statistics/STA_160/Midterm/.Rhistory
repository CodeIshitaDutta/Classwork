knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
#setup
mu = 18
a = 0.7
b = 0.8
error = 0.6
Xn = 2.1
Yn = 7.9
Yn1_ = 5.8
mu2 = 0.01
# part(a)
cat("x n+1: ")
(Xn1 = mu + a * (Xn - mu) + b * error)
cat("x n+2: ")
(Xn2 = mu + a *(Xn1 - mu) )
cat("x n+3: ")
(Xn3 = mu + a * (Xn2 - mu))
# part (b)
cat("y n+1: ")
(Yn1 = Yn + mu2 + a * (Yn - Yn1_-mu2) + b * error)
cat("y n+2: ")
(Yn2 = Yn1 + mu2 + a * (Yn1 - Yn-mu2))
cat("y n+3: ")
(Yn3 = Yn2 + mu2 + a * (Yn2 - Yn1-mu2))
mu = 18
a = 0.7
error1_ = 0.6
errorn = -0.4
Xn = 2.1
Yn = 7.9
Y1_ = 5.8
mu2 = 0.01
b1=-0.8
b2=0.6
# part(a)
cat("x n+1: ")
(X1 = mu + a * (Xn - mu) + b1* errorn + b2 *error1_)
cat("x n+2: ")
(X2 = mu + a * (X1 - mu) + b1 * errorn )
cat("x n+3: ")
(X3 = mu + a * (X2 - mu))
# part(b)
cat("y n+1: ")
(Yn1 = Yn +  mu2 + a * (Yn -Y1_-mu2) + b1 * errorn + b2 *error1_)
cat("y n+2: ")
(Yn2 = Yn1 +  mu2 + a * (Yn1 -Yn-mu2) + b1 * errorn)
cat("y n+3: ")
(Yn3 = Yn2 +  mu2 + a * (Yn2 -Yn-mu2))
#libraries
library(astsa)
library(forecast)
library(ggplot2)
# gathering the data
GlobTempNASA_2020 <- read.csv("GlobTempNASA_2020.csv",header = T,skip = 4)
value <- ts(GlobTempNASA_2020$Value)
plot(value,col = "red", ylab = " temperature")
plot(diff(value),col = "blue")
acf(diff(value))
pacf(diff(value))
#data.frame(a1$AICc,a2$AICc,a3$AICc,a4$AICc,a5$AICc,a6$AICc,a7$AICc,a8$AICc,a9$AICc,a10$AICc,a11$AICc,a12$AICc,a13$AICc,a14$AICc,a15$AICc,a16$AICc)
# chose ar3 which is ar 1 with ma 0
AICc<-data.frame(matrix(0,4,4), row.names = c(0:3))
colnames(AICc) = c(0:3)
number = 0
fin_model = sarima(value, 0, 0 ,0, details = FALSE)
for (i in c(0:3)) {
for (j in c(0:3)) {
model = sarima(value, p = i, d = 1, q = j, details = FALSE)
AICc[i+1,j+1] = model$AICc
if (model$AICc <= number) {
fin_model = model
number = model$AICc
}
}
}
AICc
#sarima(value, 1, 1, 0)
#model <- auto.arima(value, stepwise=F, approximation=F, ic="aicc")##same model
#model
fin_model
model = arima(value, order = c(3, 1, 2))
acf(model$residuals)
n <- length(value)
plot.ts(value)
lines(1:n, fitted(model), col = "green")
legend("top", legend = c("true","fitted"), lty=c(1, 1), col = c("black","green"))
#split data
xnew <- value[1:(n-5)]
xlast <- value[(n-4):n]
#fit
model1 <- arima(xnew,order = c(3,1,2))
#prediction
h <- 5
m <- n - h
fcast <- predict(model1, n.ahead=h)
upper <- fcast$pred+1.96*fcast$se
lower <- fcast$pred-1.96*fcast$se
#plot
plot.ts(xlast, xlim = c(m,n), xlab = "x")
#polygon(x=c(m+1:h,m+h:1), y=c(upper,rev(lower)), col='lightblue', border=NA)
lines(x=m+(1:h), y=fcast$pred,col='blue')
lines(x=m+(1:h), y=xlast,col='black')
legend("top", legend = c("true","fitted"), lty=c(1, 1), col = c("black","blue"))
knitr::opts_chunk$set(echo = FALSE)
temperature = read.csv("GlobTempNASA_2020.csv", skip = 4)
colnames(temperature)
Xt = diff(temperature[,2])
par(mfrow = c(2, 2))
spec.pgram(Xt, log= "no")
spec.pgram(Xt, log = "no", spans = 5)
spec.pgram(Xt, log = "no", spans = 15)
spec.pgram(Xt, log = "no", spans = 25)
Kine_data = read.csv('Kinematics_Data.csv')
colnames(Kine_data)
plot.ts(Kine_data$acceleration_x)
colnames(Kine_data)
acc_x = diff(Kine_data$acceleration_x)
plot.ts(Kine_data$acceleration_x)
spec.pgram(acc_x, log= "no")
spec.pgram(acc_x, log = "no", spans = 5)
spec.pgram(acc_x, log = "no", spans = 15)
spec.pgram(acc_x, log = "no", spans = 25)
spec.pgram(acc_x, log = "no", spans = 50)
spec.pgram(acc_x, log = "no", spans = 100)
